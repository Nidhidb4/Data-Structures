#include<stdio.h>
#include<stdlib.h>

struct Node
{
    int data;
    struct Node* next;
    struct Node* prev;
};

struct Node* insert(struct Node* head, int data)
{
    struct Node* newnode = (struct Node*)malloc(sizeof(struct Node));
    newnode->data = data;
    newnode->next = head;
    newnode->prev = NULL;
    if (head != NULL)
        head->prev = newnode;
    return newnode;
}

struct Node* create(struct Node* head)
{
    int n;
    printf("Enter the number of elements to be inserted: ");
    scanf("%d", &n);
    for (int i = 0; i < n; i++)
    {
        int value;
        printf("Enter the %dth element: ", i + 1);
        scanf("%d", &value);
        head = insert(head, value);
    }
    printf("The values have been inserted.\n");
    return head;
}

void display(struct Node* head)
{
    struct Node* temp = head;
    while (temp != NULL)
    {
        printf("%d", temp->data);
        if (temp->next != NULL)
            printf(" <-> ");
        temp = temp->next;
    }
    printf("\n");
}

struct Node* insertToLeft(struct Node* head, int target, int data)
{
    struct Node* temp = head;
    while (temp && temp->data != target)
        temp = temp->next;

    if (!temp)
        printf("Node not found.\n");
    else
    {
        struct Node* newnode = (struct Node*)malloc(sizeof(struct Node));
        newnode->data = data;
        newnode->next = temp;
        newnode->prev = temp->prev;

        if (temp->prev)
            temp->prev->next = newnode;
        else
            head = newnode;

        temp->prev = newnode;
    }
    return head;
}

struct Node* deleteByValue(struct Node* head, int target)
{
    struct Node* temp = head;
    while (temp && temp->data != target)
        temp = temp->next;

    if (!temp)
        printf("Element not found.\n");
    else
    {
        if (temp->prev)
            temp->prev->next = temp->next;
        else
            head = temp->next;

        if (temp->next)
            temp->next->prev = temp->prev;

        free(temp);
    }
    return head;
}

int main()
{
    struct Node* head = NULL;
    int choice, value, target;

    do
    {
        printf("\nMenu:\n");
        printf("1. Create a doubly linked list\n");
        printf("2. Insert to the left of a node\n");
        printf("3. Delete by value\n");
        printf("4. Display the list\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice)
        {
        case 1:
            head = create(head);
            break;
        case 2:
            printf("Enter the target node value: ");
            scanf("%d", &target);
            printf("Enter the value to be inserted: ");
            scanf("%d", &value);
            head = insertToLeft(head, target, value);
            break;
        case 3:
            printf("Enter the value to be deleted: ");
            scanf("%d", &value);
            head = deleteByValue(head, value);
            break;
        case 4:
            display(head);
            break;
        case 5:
            printf("Terminating the program.\n");
            break;
        default:
            printf("Please enter a valid choice.\n");
            break;
        }
    } while (choice != 5);

    return 0;
}
